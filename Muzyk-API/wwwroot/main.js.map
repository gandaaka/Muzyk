{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_guards/prevent-unsaved-changes.guard.ts","webpack:///./src/app/_models/pagination.ts","webpack:///./src/app/_resolvers/followers.resolver.ts","webpack:///./src/app/_resolvers/member-list.resolver.ts","webpack:///./src/app/_resolvers/messages.resolver.ts","webpack:///./src/app/_resolvers/profile-edit.resolver.ts","webpack:///./src/app/_resolvers/profile-page.resolver.ts","webpack:///./src/app/_services/alertify.service.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/error.interceptor.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/analytics/analytics.component.css","webpack:///./src/app/analytics/analytics.component.html","webpack:///./src/app/analytics/analytics.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auto-generated/auto-generated.component.css","webpack:///./src/app/auto-generated/auto-generated.component.html","webpack:///./src/app/auto-generated/auto-generated.component.ts","webpack:///./src/app/follower-list/follower-list.component.css","webpack:///./src/app/follower-list/follower-list.component.html","webpack:///./src/app/follower-list/follower-list.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/members/lists/lists.component.css","webpack:///./src/app/members/lists/lists.component.html","webpack:///./src/app/members/lists/lists.component.ts","webpack:///./src/app/members/member-card/member-card.component.css","webpack:///./src/app/members/member-card/member-card.component.html","webpack:///./src/app/members/member-card/member-card.component.ts","webpack:///./src/app/members/member-map/member-map.component.css","webpack:///./src/app/members/member-map/member-map.component.html","webpack:///./src/app/members/member-map/member-map.component.ts","webpack:///./src/app/members/member-messages/member-messages.component.css","webpack:///./src/app/members/member-messages/member-messages.component.html","webpack:///./src/app/members/member-messages/member-messages.component.ts","webpack:///./src/app/members/photo-editor/photo-editor.component.css","webpack:///./src/app/members/photo-editor/photo-editor.component.html","webpack:///./src/app/members/photo-editor/photo-editor.component.ts","webpack:///./src/app/members/profile-edit/profile-edit.component.css","webpack:///./src/app/members/profile-edit/profile-edit.component.html","webpack:///./src/app/members/profile-edit/profile-edit.component.ts","webpack:///./src/app/members/profile-page/profile-page.component.css","webpack:///./src/app/members/profile-page/profile-page.component.html","webpack:///./src/app/members/profile-page/profile-page.component.ts","webpack:///./src/app/members/video-editor/video-editor.component.css","webpack:///./src/app/members/video-editor/video-editor.component.html","webpack:///./src/app/members/video-editor/video-editor.component.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/newsFeed-components/newsfeed-card/newsfeed-card.component.css","webpack:///./src/app/newsFeed-components/newsfeed-card/newsfeed-card.component.html","webpack:///./src/app/newsFeed-components/newsfeed-card/newsfeed-card.component.ts","webpack:///./src/app/newsFeed-components/newsfeed/newsfeed.component.css","webpack:///./src/app/newsFeed-components/newsfeed/newsfeed.component.html","webpack:///./src/app/newsFeed-components/newsfeed/newsfeed.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/environments/environment.prod.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router, private alertify: AlertifyService) {}\n\n  canActivate(): boolean {\n    if ( this.authService.checkLoggedIn()) {\n      return true;\n    }\n    this.alertify.error('You shall not pass !!');\n    this.router.navigate(['\\home']);\n    return false;\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { ProfileEditComponent } from '../members/profile-edit/profile-edit.component';\r\n\r\n@Injectable()\r\nexport class PreventUnsavedChanges implements CanDeactivate<ProfileEditComponent> {\r\n    canDeactivate(component: ProfileEditComponent) {\r\n        if (component.editForm.dirty) {\r\n            return confirm('Are you sure you want to continue? Any unsaved changes will be lost');\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","export interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n    totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n    result: T;\n    pagination: Pagination;\n}\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable , of} from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class FollowerResolver implements Resolve<User> {\r\n    pageNumber = 1;\r\n    pageSize = 8;\r\n    followParam = 'Followers';\r\n\r\n    constructor(private userService: UserService, private router: Router, private alertify: AlertifyService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUsers(this.pageNumber, this.pageSize, null, this.followParam).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retreiving data');\r\n                this.router.navigate(['/newsfeed']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable , of} from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberListResolver implements Resolve<User> {\r\n    pageNumber = 1;\r\n    pageSize = 8;\r\n\r\n    constructor(private userService: UserService, private router: Router, private alertify: AlertifyService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retreiving data');\r\n                this.router.navigate(['/newsfeed']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Message } from '../_models/message';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class MessagesResolver implements Resolve<Message> {\r\n  pageNumber = 1;\r\n  pageSize = 8;\r\n  messageContainer = 'Unread';\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private alertify: AlertifyService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<Message> {\r\n    return this.userService.getMessage(this.authService.decodedToken.nameid, this.pageNumber, this.pageSize, this.messageContainer).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retreiving messages');\r\n        this.router.navigate(['/newsfeed']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable , of} from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class ProfileEditResolver implements Resolve<User> {\r\n\r\n    constructor(private userService: UserService, private authService: AuthService, private router: Router,\r\n        private alertify: AlertifyService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retreiving data');\r\n                this.router.navigate(['/lists']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable , of} from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ProfilePageResolver implements Resolve<User> {\r\n\r\n    constructor(private userService: UserService, private router: Router, private alertify: AlertifyService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUser(route.params['id']).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retreiving data');\r\n                this.router.navigate(['/lists']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\ndeclare let alertify: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n  constructor() {}\n\n  confirm(message: string, okCallBack: () => any) {\n    alertify.confirm(message, function(e) {\n      if (e) {\n        okCallBack();\n      } else {\n      }\n    });\n  }\n\n  success(message: string) {\n    alertify.success(message);\n  }\n\n  error(message: string) {\n    alertify.error(message);\n  }\n\n  warning(message: string) {\n    alertify.warning(message);\n  }\n\n  message(message: string) {\n    alertify.message(message);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { environment } from '../../environments/environment';\r\nimport { User } from '../_models/user';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  baseUrl = environment.apiUrl + 'auth/';\r\n  jwtHelper = new JwtHelperService();\r\n  decodedToken: any;\r\n  currentUser: User;\r\n  photoUrl = new BehaviorSubject<string>('../../assets/user.png');\r\n  coverPhotoUrl = new BehaviorSubject<string>('../../assets/coverPhotoTemp.jpg');\r\n  currentPhotoUrl = this.photoUrl.asObservable();\r\n  currentCoverPhoto = this.coverPhotoUrl.asObservable();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  changeMemberPhoto(photoUrl: string) {\r\n    this.photoUrl.next(photoUrl);\r\n  }\r\n\r\n  changeCoverPhoto(coverPhoto: string) {\r\n    this.coverPhotoUrl.next(coverPhoto);\r\n  }\r\n\r\n  login(model: any) {\r\n    return this.http.post(this.baseUrl + 'login', model).pipe(\r\n      map((response: any) => {\r\n        const user = response;\r\n        if (user) {\r\n          localStorage.setItem('token', user.token);\r\n          localStorage.setItem('user', JSON.stringify(user.user));\r\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\r\n          this.currentUser = user.user;\r\n          this.changeMemberPhoto(this.currentUser.photoUrl);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  register(user: User) {\r\n    return this.http.post(this.baseUrl + 'register', user);\r\n  }\r\n\r\n  checkLoggedIn() {\r\n    const token = localStorage.getItem('token');\r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable, throwError} from 'rxjs';\r\nimport { catchError, throwIfEmpty } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(req).pipe(\r\n            catchError(error => {\r\n                if (error instanceof HttpErrorResponse) {\r\n                    // Unauthorized 401 error\r\n                    if (error.status === 401) {\r\n                        return throwError(error.statusText);\r\n                    }\r\n                    // Application Error Handler\r\n                    const applicationError = error.headers.get('Application-Error');\r\n                    if (applicationError) {\r\n                        console.error(applicationError);\r\n                        return throwError(applicationError);\r\n                    }\r\n                    // server Error handler\r\n                    const serverError = error.error;\r\n                    let modelStateErrors = '';\r\n                    if (serverError && typeof serverError === 'object') {\r\n                        for (const key in serverError) {\r\n                            if (serverError[key]) {\r\n                                modelStateErrors += serverError[key] + '\\n';\r\n                            }\r\n                        }\r\n                    }\r\n                    return throwError(modelStateErrors || serverError || 'Server Error');\r\n                }\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ErrorInterceptor,\r\n    multi: true\r\n};\r\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { PaginatedResult } from '../_models/pagination';\nimport { map } from 'rxjs/operators';\nimport { Message } from '../_models/message';\nimport { observe } from 'tns-core-modules/ui/gestures/gestures';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getUsers(page?, itemsPerPage?, userParams?, followParams?): Observable<PaginatedResult<User[]>> {\n    const paginatedResult: PaginatedResult<User[]> = new PaginatedResult<User[]>();\n\n    let params = new HttpParams();\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    if (userParams != null) {\n      params = params.append('minExp', userParams.minExp);\n      params = params.append('maxExp', userParams.maxExp);\n      params = params.append('genre', userParams.genre);\n      params = params.append('orderBy', userParams.orderBy);\n    }\n\n    if (followParams === 'Followers') {\n      params = params.append('followers', 'true');\n    }\n\n    if (followParams === 'Followees') {\n      params = params.append('followees', 'true');\n    }\n\n    return this.http\n      .get<User[]>(this.baseUrl + 'users', { observe: 'response', params })\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(\n              response.headers.get('Pagination')\n            );\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getUser(id): Observable<User> {\n    return this.http.get<User>(this.baseUrl + 'users/' + id);\n  }\n\n  updateUser(id: number, userData: User) {\n    return this.http.put(this.baseUrl + 'users/' + id, userData);\n  }\n\n  setProfilePhoto(userId: number, id: number) {\n    return this.http.post(\n      this.baseUrl + 'users/' + userId + '/photos/' + id + '/setMain',\n      {}\n    );\n  }\n\n  setCoverPhoto(userId: number, id: number) {\n    return this.http.post(this.baseUrl + 'users/' + userId + '/photos/' + id + 'setCover', {});\n  }\n\n  deletePhoto(userId: number, id: number) {\n    return this.http.delete(this.baseUrl + 'users/' + userId + '/photos/' + id);\n  }\n\n  sendFollow(id: number, recepientId: number) {\n    return this.http.post(this.baseUrl + 'users/' + id + '/follow/' + recepientId, {});\n  }\n\n  getMessage(id: number, page?, itemsPerPage?, messageContainer?) {\n    const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<Message[]>();\n\n    let params = new HttpParams();\n    params = params.append('MessageContainer', messageContainer);\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages', {observe: 'response', params})\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') !== null) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getMessageThread(id: number, recepientId: number) {\n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages/thread/' + recepientId);\n  }\n\n  sendMessage(id: number, message: Message) {\n    return this.http.post(this.baseUrl + 'users/' + id + '/messages', message);\n  }\n\n  deleteMessage(id: number, userId: number) {\n    return this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + id, {});\n  }\n\n  markAsRead(userId: number, messageId: number) {\n    return this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + messageId + '/read', {}).subscribe();\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  analytics works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-analytics',\n  templateUrl: './analytics.component.html',\n  styleUrls: ['./analytics.component.css']\n})\nexport class AnalyticsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<app-nav></app-nav>\\r\\n<br>\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './_services/auth.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  jwtHelper = new JwtHelperService();\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    const token = localStorage.getItem('token');\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (token) {\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n    if (user) {\n      this.authService.currentUser = user;\n      this.authService.changeMemberPhoto(user.photoUrl);\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { AgmCoreModule } from '@agm/core';\n\nimport {\n  BsDropdownModule,\n  TabsModule,\n  ProgressbarModule,\n  BsDatepickerModule,\n  PaginationModule,\n  ButtonsModule,\n  CarouselModule\n} from 'ngx-bootstrap';\nimport { NgxGalleryModule } from 'ngx-gallery';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { TimeAgoPipe } from 'time-ago-pipe';\n\nimport { appRoutes } from './routes';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthService } from './_services/auth.service';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\nimport { AlertifyService } from './_services/alertify.service';\nimport { ListsComponent } from './members/lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AnalyticsComponent } from './analytics/analytics.component';\nimport { NewsfeedComponent } from './newsFeed-components/newsfeed/newsfeed.component';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { UserService } from './_services/user.service';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { ProfilePageComponent } from './members/profile-page/profile-page.component';\nimport { ProfilePageResolver } from './_resolvers/profile-page.resolver';\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\nimport { ProfileEditComponent } from './members/profile-edit/profile-edit.component';\nimport { ProfileEditResolver } from './_resolvers/profile-edit.resolver';\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { AutoGeneratedComponent } from './auto-generated/auto-generated.component';\nimport { FollowerListComponent } from './follower-list/follower-list.component';\nimport { FollowerResolver } from './_resolvers/followers.resolver';\nimport { MessagesResolver } from './_resolvers/messages.resolver';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { MemberMapComponent } from './members/member-map/member-map.component';\nimport { NewsfeedCardComponent } from './newsFeed-components/newsfeed-card/newsfeed-card.component';\nimport { VideoEditorComponent } from './members/video-editor/video-editor.component';\n\nexport function tokenGetter() {\n  return localStorage.getItem('token');\n}\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      NavComponent,\n      HomeComponent,\n      RegisterComponent,\n      ListsComponent,\n      MessagesComponent,\n      AnalyticsComponent,\n      NewsfeedComponent,\n      NewsfeedCardComponent,\n      MemberCardComponent,\n      ProfilePageComponent,\n      ProfileEditComponent,\n      PhotoEditorComponent,\n      AutoGeneratedComponent,\n      MemberMessagesComponent,\n      TimeAgoPipe,\n      FollowerListComponent,\n      MemberMapComponent,\n      VideoEditorComponent\n   ],\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule,\n      ReactiveFormsModule,\n      TabsModule.forRoot(),\n      BsDropdownModule.forRoot(),\n      CarouselModule.forRoot(),\n      RouterModule.forRoot(appRoutes),\n      AgmCoreModule.forRoot({\n        apiKey: ''\n      }),\n      ProgressbarModule.forRoot(),\n      BsDatepickerModule.forRoot(),\n      PaginationModule.forRoot(),\n      ButtonsModule.forRoot(),\n      NgxGalleryModule,\n      FileUploadModule,\n      JwtModule.forRoot({\n        config: {\n          tokenGetter: tokenGetter,\n          whitelistedDomains: ['localhost:5000'],\n          blacklistedRoutes: ['localhost:5000/api/auth/register']\n        }\n      })\n    ],\n  providers: [\n    AuthService,\n    ErrorInterceptorProvider,\n    AlertifyService,\n    AuthGuard,\n    PreventUnsavedChanges,\n    UserService,\n    ProfilePageResolver,\n    MemberListResolver,\n    ProfileEditResolver,\n    FollowerResolver,\n    MessagesResolver\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"\"","module.exports = \"<p>\\n  auto-generated works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auto-generated',\n  templateUrl: './auto-generated.component.html',\n  styleUrls: ['./auto-generated.component.css']\n})\nexport class AutoGeneratedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid pt-3\\\">\\n  <app-member-map></app-member-map>\\n  <div class=\\\"text-center mt-3\\\">\\n    <div class=\\\"container-fluid mt-3\\\">\\n      <br>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"btn-group\\\">\\n          <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"followsParam\\\" btnRadio=\\\"Followers\\\" (click)=\\\"loadUsers()\\\">Followers\\n            {{pagination.totalItems}}</button>\\n          <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"followsParam\\\" btnRadio=\\\"Followees\\\" (click)=\\\"loadUsers()\\\">Following\\n            {{pagination.totalItems}}</button>\\n        </div>\\n      </div>\\n      <br>\\n\\n      <div class=\\\"row\\\">\\n        <div *ngFor=\\\"let user of users\\\" class=\\\"col-lg-3 col-md-4 col-sm-4 mt-4\\\">\\n          <app-member-card [user]=\\\"user\\\"></app-member-card>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"d-flex justify-content-center\\\">\\n      <pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n        [(ngModel)]=\\\"pagination.currentPage\\\" (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\"\\n        firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n      </pagination>\\n    </div>\\n  </div>\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { User } from '../_models/user';\nimport { UserService } from '../_services/user.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Component({\n  selector: 'app-follower-list',\n  templateUrl: './follower-list.component.html',\n  styleUrls: ['./follower-list.component.css']\n})\nexport class FollowerListComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  followsParam: string;\n\n  constructor(\n    private userService: UserService,\n    private route: ActivatedRoute,\n    private alertify: AlertifyService,\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['user'].result;\n      this.pagination = data['user'].pagination;\n    });\n    this.followsParam = 'Followers';\n  }\n\n  loadUsers() {\n    this.userService\n      .getUsers(\n        this.pagination.currentPage,\n        this.pagination.itemsPerPage,\n        null,\n        this.followsParam\n      )\n      .subscribe(\n        (res: PaginatedResult<User[]>) => {\n          this.users = res.result;\n          this.pagination = res.pagination;\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-5\\\">\\r\\n  <form class=\\\"form-signin\\\">\\r\\n    <div *ngIf=\\\"!registerMode\\\" class=\\\"text-center mb-4\\\">\\r\\n      <h1 class=\\\"h3 mb-3 font-weight-bold\\\">Welcome to Muzyk</h1>\\r\\n      <p class=\\\"h5 mb-4 font-weight-bold\\\">A Place where artists meets the world</p>\\r\\n  \\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg mr-2\\\" (click)=\\\"registerToggle()\\\">Register</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-lg\\\">Learn more</button>\\r\\n\\r\\n    </div>\\r\\n  </form>\\r\\n  <div *ngIf=\\\"registerMode\\\" class=\\\"container\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n      <div class=\\\"col4\\\">\\r\\n        <app-register (cancelRegister)=\\\"cancelRegisterMode($event)\\\"></app-register>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  registerMode = false;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  registerToggle() {\r\n    this.registerMode = true;\r\n  }\r\n  cancelRegisterMode(registerMode: boolean) {\r\n    this.registerMode = registerMode;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container pt-3\\\">\\n  <div class=\\\"text-center mt-3\\\">\\n    <h2>Search Response - {{pagination.totalItems}} users found</h2>\\n  </div>\\n\\n  <div class=\\\"container mt-3\\\">\\n    <form class=\\\"form-inline\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"loadUsers()\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"minExp\\\">Experience From</label>\\n        <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px\\\" id=\\\"minExp\\\" [(ngModel)]=\\\"userParams.minExp\\\"\\n          name=\\\"minExp\\\">\\n      </div>\\n\\n      <div class=\\\"form-group px-2\\\">\\n        <label for=\\\"maxExp\\\">Experience To</label>\\n        <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px\\\" id=\\\"maxExp\\\" [(ngModel)]=\\\"userParams.maxExp\\\"\\n          name=\\\"maxExp\\\">\\n      </div>\\n\\n      <div class=\\\"form-group px-2\\\">\\n        <label for=\\\"genre\\\">Genre: </label>\\n        <select class=\\\"form-control ml-1\\\" style=\\\"width: 130px\\\" id=\\\"genre\\\" [(ngModel)]=\\\"defaultGenre\\\" name=\\\"selGenre\\\">\\n          <option>None</option>\\n          <option *ngFor=\\\"let genre of genreList\\\" [value]=\\\"genre.value\\\">\\n            {{genre.display}}\\n          </option>\\n        </select>\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px\\\" (click)=\\\"selectGenre(defaultGenre)\\\">Apply\\n        Filters</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" style=\\\"margin-left:10px\\\" (click)=\\\"resetFilters()\\\">Reset Filter</button>\\n\\n      <div class=\\\"col\\\">\\n        <div class=\\\"btn-group float-right\\\">\\n          <button type=\\\"button\\\" name=\\\"orderBy\\\" class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"userParams.orderBy\\\" (click)=\\\"loadUsers()\\\"\\n            btnRadio=\\\"lastActive\\\">Last Active</button>\\n          <button type=\\\"button\\\" name=\\\"orderBy\\\" class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"userParams.orderBy\\\" (click)=\\\"loadUsers()\\\"\\n            btnRadio=\\\"created\\\">Newest Members</button>\\n        </div>\\n      </div>\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <div *ngFor=\\\"let user of users\\\" class=\\\"col-lg2 col-md-3 col-sm-6 mt-4\\\">\\n        <app-member-card [user]=\\\"user\\\"></app-member-card>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"d-flex justify-content-center\\\">\\n    <pagination [boundaryLinks]=\\\"true\\\" [(ngModel)]=\\\"pagination.currentPage\\\" [totalItems]=\\\"pagination.totalItems\\\"\\n      [itemsPerPage]=\\\"pagination.itemsPerPage\\\" (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\"\\n      firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n    </pagination>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from '../../_models/user';\nimport { UserService } from '../../_services/user.service';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Pagination, PaginatedResult } from 'src/app/_models/pagination';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  users: User[];\n  user: User = JSON.parse(localStorage.getItem('user'));\n  genreList = [\n    { value: 'Blues', display: 'Blues' },\n    { value: 'Rock', display: 'Rock' },\n    { value: 'Classical', display: 'Classical Music' },\n    { value: 'Country', display: 'Country' },\n    { value: 'Dance', display: 'Dance' },\n    { value: 'Jazz', display: 'Jazz' }\n  ];\n  userParams: any = {};\n  pagination: Pagination;\n  defaultGenre = 'None';\n\n  constructor(\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n    this.userParams.minExp = 0;\n    this.userParams.maxExp = 25;\n    this.userParams.orderBy = 'created';\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n  resetFilters() {\n    this.userParams.genre = this.defaultGenre = 'None';\n    this.userParams.minExp = 0;\n    this.userParams.maxExp = 25;\n    this.loadUsers();\n  }\n\n  loadUsers() {\n    this.userService\n      .getUsers(\n        this.pagination.currentPage,\n        this.pagination.itemsPerPage,\n        this.userParams\n      )\n      .subscribe(\n        (res: PaginatedResult<User[]>) => {\n          this.users = res.result;\n          this.pagination = res.pagination;\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  selectGenre(genre: String) {\n    let selectedGenre: String;\n    switch (genre) {\n      case 'Rock':\n        selectedGenre = genre;\n        break;\n      case 'Blues':\n        selectedGenre = genre;\n        break;\n      case 'Jazz':\n        selectedGenre = genre;\n        break;\n      case 'Classical':\n        selectedGenre = genre;\n        break;\n      case 'Country':\n        selectedGenre = genre;\n        break;\n      case 'Dance':\n        selectedGenre = genre;\n        break;\n      case 'None':\n        selectedGenre = '';\n        break;\n      default:\n        selectedGenre = '';\n        break;\n    }\n    this.userParams.genre = selectedGenre;\n  }\n}\n","module.exports = \".card:hover img{\\r\\n    -webkit-transform: scale(1.2, 1.2);\\r\\n            transform: scale(1.2, 1.2);\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function: ease-out;\\r\\n    opacity: 0.7;\\r\\n}\\r\\n\\r\\n.card-img-top {\\r\\n    height: 250px;\\r\\n    width: 250px;\\r\\n}\\r\\n\\r\\n.card img{\\r\\n    -webkit-transform: scale(1.0, 1.0);\\r\\n            transform: scale(1.0, 1.0);\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function: ease-out;\\r\\n}\\r\\n\\r\\n.cards-image-wrapper {\\r\\n    overflow: hidden;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.member-icons {\\r\\n    position: absolute;\\r\\n    bottom: -30%;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    margin-right: auto;\\r\\n    margin-left: auto;\\r\\n    opacity: 0;\\r\\n}\\r\\n\\r\\n.cards-image-wrapper:hover .member-icons{\\r\\n    bottom: 0;\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.animate {\\r\\n    transition: all 0.3s ease-in-out;\\r\\n}\"","module.exports = \"<div class=\\\"card mb-3 mt-3\\\">\\n\\n  <div class=\\\"cards-image-wrapper\\\">\\n    <img src=\\\"{{user.photoUrl || '../../../assets/user.png'}}\\\" alt=\\\"{{user.username}}\\\" class=\\\"card-img-top\\\">\\n    <ul class=\\\"list-inline member-icons animate text-center\\\">\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/members/', user.id]\\\"><i class=\\\"fa fa-user animate\\\"></i></button></li>\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" (click)=\\\"sendFollowRequest(user.id)\\\"><i class=\\\"fas fa-user-friends\\\"></i></button></li>\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/members/', user.id]\\\" [queryParams]=\\\"{tab: 3}\\\"><i class=\\\"fa fa-envelope animate\\\"></i></button></li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"card-body p-1\\\">\\n    <h5 class=\\\"card-title text-center mb-2\\\"><i class=\\\"fa fa-user\\\"></i>\\n      {{user.firstName | titlecase}} , {{user.genre}}\\n    </h5>\\n    <p class=\\\"card-text text-muted text-center\\\">{{user.city}}</p>\\n  </div>\\n\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from '../../_models/user';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input()\n  user: User;\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private alertify: AlertifyService\n  ) {}\n\n  ngOnInit() {}\n\n  sendFollowRequest(id: number) {\n    this.userService.sendFollow(this.authService.decodedToken.nameid, id).subscribe(data => {\n      this.alertify.success('You are now following ' + this.user.firstName);\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" style=\\\"height: 300px;\\\" [zoom]=\\\"13\\\">\\n    <agm-marker [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\"></agm-marker>\\n  </agm-map>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-member-map',\n  templateUrl: './member-map.component.html',\n  styleUrls: ['./member-map.component.css']\n})\nexport class MemberMapComponent implements OnInit {\n  lat = 43.6532;\n  lng = -79.3832;\n  location: string;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".card{\\r\\n    border: none;\\r\\n}\\r\\n\\r\\n.chat{\\r\\n    list-style: none;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.chat li{\\r\\n    margin-bottom: 10px;\\r\\n    padding-bottom: 10px;\\r\\n    border-bottom: 1px dotted #B3A9A9;\\r\\n}\\r\\n\\r\\n.rounded-circle {\\r\\n    height: 50px;\\r\\n    width: 50px;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    overflow-y: scroll;\\r\\n    height: 400px;\\r\\n}\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <div *ngIf=\\\"messages?.length === 0\\\">\\n      <p>No messages yet</p>\\n    </div>\\n\\n    <ul class=\\\"chat\\\">\\n      <li *ngFor=\\\"let message of messages\\\">\\n        <!-- to them -->\\n        <div *ngIf=\\\"message.senderId == recepientId\\\">\\n          <span class=\\\"chat-img float-left\\\">\\n            <img src=\\\"{{message.senderPhotoUrl || '../../assets/user.png'}}\\\" alt=\\\"{{message.senderKnownAs}}\\\" class=\\\"rounded-circle\\\">\\n          </span>\\n          <div class=\\\"chat-body\\\">\\n            <div class=\\\"header\\\">\\n              <strong class=\\\"primary-font\\\">{{message.senderKnownAs}}</strong>\\n              <small class=\\\"text-muted float-right\\\">\\n                <span class=\\\"fa fa-clock-o\\\">{{message.messageSent | timeAgo}}</span>\\n              </small>\\n            </div>\\n            <p>{{message.content}}</p>\\n          </div>\\n        </div>\\n\\n        <!-- to me -->\\n        <div *ngIf=\\\"message.senderId != recepientId\\\">\\n          <span class=\\\"chat-img float-right\\\">\\n            <img src=\\\"{{message.senderPhotoUrl || '../../assets/user.png'}}\\\" alt=\\\"{{message.senderKnownAs}}\\\" class=\\\"rounded-circle\\\">\\n          </span>\\n          <div class=\\\"chat-body\\\">\\n            <div class=\\\"header\\\">\\n              <small class=\\\"text-muted\\\">\\n                <span class=\\\"fa fa-clock-o\\\">{{message.messageSent | timeAgo}}</span>\\n                <span *ngIf=\\\"!message.isRead\\\" class=\\\"text-danger\\\">(unread)</span>\\n                <span *ngIf=\\\"message.isRead\\\" class=\\\"text-success\\\">(Read {{message.dateRead | timeAgo}})</span>\\n              </small>\\n              <strong class=\\\"primary-font float-right\\\">{{message.senderKnownAs}}</strong>\\n            </div>\\n            <p>{{message.content}}</p>\\n          </div>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"card-footer\\\">\\n    <form #messageForm=\\\"ngForm\\\" (ngSubmit)=\\\"messageForm.valid && sendMessage()\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" \\n        [(ngModel)]=\\\"newMessage.content\\\"\\n        name=\\\"content\\\"\\n        required\\n        class=\\\"form-control input-sm\\\" \\n        placeholder=\\\"send message\\\">\\n        <div class=\\\"input-group-append\\\">\\n          <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!messageForm.valid\\\">Send</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from 'src/app/_models/message';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { tap } from 'rxjs/operators';\nimport * as signalR from '@aspnet/signalr';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n  @Input()\n  recepientId: number;\n  public messages: Message[];\n  public newMessage: any = {};\n  private connection: signalR.HubConnection;\n\n  signalUrl = environment.signalRUrl;\n\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private alertify: AlertifyService\n  ) {}\n\n  ngOnInit() {\n    this.connection = new signalR.HubConnectionBuilder()\n      .withUrl(this.signalUrl + '/mHub')\n      .build();\n\n    this.connection\n      .start()\n      .then(() => {\n        this.alertify.success('Connection Started');\n      })\n      .catch(error => {\n        this.alertify.warning(error);\n      });\n\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    const currentUserId = +this.authService.decodedToken.nameid;\n    this.userService\n      .getMessageThread(this.authService.decodedToken.nameid, this.recepientId)\n      .pipe(\n        tap(messages => {\n          for (let i = 0; i < messages.length; i++) {\n            if (\n              messages[i].isRead === false &&\n              messages[i].recepientId === currentUserId\n            ) {\n              this.userService.markAsRead(currentUserId, messages[i].id);\n            }\n          }\n        })\n      )\n      .subscribe(\n        messages => {\n          this.messages = messages;\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  sendMessage() {\n    this.newMessage.recepientId = this.recepientId;\n    this.userService\n      .sendMessage(this.authService.decodedToken.nameid, this.newMessage)\n      .subscribe(\n        (message: Message) => {\n          this.messages.unshift(message);\n          /* this.connection.invoke('NewMessage', message.content)\n            .then(() => this.loadMessages()); */\n          this.newMessage.content = '';\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n}\n","module.exports = \"img.img-thumbnail {\\r\\n    height: 200px;\\r\\n    min-width: 250px !important;\\r\\n    margin-bottom: 2px;\\r\\n}\\r\\n\\r\\n.nv-file-over {\\r\\n    border: dotted 3px #158CBA;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n\\n    <!-- <img src=\\\"{{photo.photoUrl}}\\\" class=\\\"img-fluid img-thumbnail p-1\\\" alt=\\\"\\\"> -->\\n    <carousel [(activeSlide)]=\\\"activeSlide\\\">\\n      <slide *ngFor=\\\"let photo of photos; let index=index\\\">\\n        <img [src]=\\\"photo.photoUrl\\\" class=\\\"justify-content-center img-fluid\\\" alt=\\\"{{photo.description}}\\\" class=\\\"w-65\\\">\\n        <div class=\\\"carousel-caption\\\">\\n          <p>{{photo.description}}</p>\\n          <div class=\\\"text-center\\\">\\n            <ul class=\\\"list-inline member-icons animate text-center\\\">\\n                <li class=\\\"list-inline-item\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm mr-1\\\" (click)=\\\"setProfilePhoto(photo)\\\" [ngClass]=\\\"photo.isProfilePhoto ? 'btn-success active' : 'btn-secondary'\\\"\\n                [disabled]=\\\"photo.isProfilePhoto\\\">set as Main</button></li>\\n                <li class=\\\"list-inline-item\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deletePhoto(photo.id)\\\" [disabled]=\\\"photo.isProfilePhoto\\\"><i\\n                  class=\\\"fa fa-trash animate\\\"></i></button></li>\\n            </ul>\\n          </div>\\n        </div>\\n      </slide>\\n    </carousel>\\n  </div>\\n</div>\\n\\n<div class=\\\"row mt-3\\\">\\n  <div class=\\\"col-md-3\\\">\\n    <h3>Add Photos</h3>\\n    <div ng2FileDrop [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\" (fileOver)=\\\"fileOverBase($event)\\\" [uploader]=\\\"uploader\\\"\\n      class=\\\"card bg-faded p-3 text-center mb-3 my-drop-zone\\\">\\n      <i class=\\\"fa fa-upload fa-3x\\\"></i>\\n      Drop Photos Here\\n    </div>\\n    Multiple\\n    <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple /><br />\\n    Single\\n    <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n  </div>\\n\\n  <div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\" *ngIf=\\\"uploader?.queue?.length\\\">\\n    <h3>Upload queue</h3>\\n    <p>Queue length: {{ uploader?.queue?.length }}</p>\\n    <table class=\\\"table\\\">\\n      <thead>\\n        <tr>\\n          <th width=\\\"50%\\\">Name</th>\\n          <th>Size</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let item of uploader.queue\\\">\\n          <td><strong>{{ item?.file?.name }}</strong></td>\\n          <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB </td>\\n\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <div>\\n      <div>\\n        Queue progress:\\n        <div class=\\\"progress mb-4\\\">\\n          <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\n        </div>\\n      </div>\\n      <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\" (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n        <span class=\\\"fa fa-upload\\\"></span> Upload\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s\\\" (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\n        <span class=\\\"fa fa-ban\\\"></span> Cancel\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\" (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\n        <span class=\\\"fa fa-trash\\\"></span> Remove\\n      </button>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { Photo } from '../../_models/photo';\nimport { environment } from '../../../environments/environment';\nimport { AuthService } from '../../_services/auth.service';\nimport { UserService } from '../../_services/user.service';\nimport { AlertifyService } from '../../_services/alertify.service';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() photos: Photo[];\n  @Output() getMemberPhotoChange = new EventEmitter<string>();\n\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n  currentProfilePhoto: Photo;\n  activeSlide = 0;\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private alertify: AlertifyService\n  ) {}\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url:\n        this.baseUrl +\n        'users/' +\n        this.authService.decodedToken.nameid +\n        '/photos',\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 100 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = file => {\n      file.withCredentials = false;\n    };\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const res: Photo = JSON.parse(response);\n        const photo = {\n          id: res.id,\n          photoUrl: res.photoUrl,\n          dateAdded: res.dateAdded,\n          description: res.description,\n          isProfilePhoto: res.isProfilePhoto,\n          isCoverPhoto: res.isCoverPhoto\n        };\n        this.photos.push(photo);\n        if (photo.isProfilePhoto) {\n          this.authService.changeMemberPhoto(photo.photoUrl);\n          this.authService.currentUser.photoUrl = photo.photoUrl;\n          localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n        }\n      }\n    };\n  }\n\n  setProfilePhoto(photo: Photo) {\n    this.userService\n      .setProfilePhoto(this.authService.decodedToken.nameid, photo.id)\n      .subscribe(\n        () => {\n          this.currentProfilePhoto = this.photos.filter(\n            p => p.isProfilePhoto === true\n          )[0];\n          this.currentProfilePhoto.isProfilePhoto = false;\n          photo.isProfilePhoto = true;\n          this.authService.changeMemberPhoto(photo.photoUrl);\n          this.authService.currentUser.photoUrl = photo.photoUrl;\n          localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n        },\n        error => {\n          this.alertify.error('Photo could not be set as Profile Photo');\n        }\n      );\n  }\n\n  deletePhoto(photoId: number) {\n    this.alertify.confirm('Are you sure to delete this photo ?', () => {\n      this.userService.deletePhoto(this.authService.decodedToken.nameid, photoId).subscribe(() => {\n        this.photos.splice(this.photos.findIndex(p => p.id === photoId), 1);\n        this.alertify.success('Photo has been deleted successfully');\n      }, error => {\n        this.alertify.error('Failed to delete the photo');\n      });\n    });\n  }\n\n}\n","module.exports = \".img-thumbnail {\\r\\n    margin: 25px;\\r\\n    width: 85%;\\r\\n    height: 85%;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n    padding: 10px 15px;\\r\\n    background-color: white;\\r\\n    border-top: none;\\r\\n}\"","module.exports = \"<br><br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <h1>Your Profile</h1>\\n    </div>\\n    <div class=\\\"col sm-8\\\">\\n      <div *ngIf=\\\"editForm.dirty\\\" class=\\\"alert alert-info\\\">\\n        <strong>Information: </strong> Please save your changes ! Unsaved changes will be lost\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{photoUrl || '../../assets/user.png'}}\\\" alt=\\\"{{user.username}}\\\">\\n\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Location :</strong>\\n            <p>{{user.city}}, {{user.country}}</p>\\n          </div>\\n          <div>\\n            <strong>Genre :</strong>\\n            <p>{{user.genre}}</p>\\n          </div>\\n          <div>\\n            <strong>Member Since :</strong>\\n            <p>{{user.created | date}}</p>\\n          </div>\\n          <div>\\n            <strong>Last Active :</strong>\\n            <p>{{user.lastActive | timeAgo}}</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"class-footer\\\">\\n          <button [disabled]=\\\"!editForm.dirty\\\" form=\\\"editForm\\\" class=\\\"btn btn-success btn-block w-100\\\">Save Changes</button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"follower-tabset\\\">\\n          <tab heading=\\\"Edit Profile\\\">\\n            <br>\\n            <form #editForm=\\\"ngForm\\\" id=\\\"editForm\\\" (ngSubmit)=\\\"updateUser()\\\">\\n              <h4>Description</h4>\\n              <textarea name=\\\"introduction\\\" rows=\\\"6\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.introduction\\\"></textarea>\\n              <br>\\n              <h4>Interests</h4>\\n              <textarea name=\\\"interests\\\" rows=\\\"6\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.interests\\\"></textarea>\\n              <h4>Location Details:</h4>\\n              <div class=\\\"form-inline\\\">\\n                <label for=\\\"city\\\">City</label>\\n                <input type=\\\"text\\\" name=\\\"city\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.city\\\">\\n                <label class=\\\"ml-3\\\" for=\\\"country\\\">Country</label>\\n                <input type=\\\"text\\\" name=\\\"country\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.country\\\">\\n                <label class=\\\"ml-3\\\" for=\\\"genre\\\">Genre</label>\\n                <input type=\\\"text\\\" name=\\\"genre\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.genre\\\">\\n              </div>\\n            </form>\\n          </tab>\\n\\n          <tab heading=\\\"Edit Photos\\\">\\n            <app-photo-editor [photos]=\\\"user.photos\\\" (getMemberPhotoChange)=\\\"updateProfilePhoto($event)\\\"></app-photo-editor>\\n          </tab>\\n\\n          <tab heading=\\\"Edit Videos\\\">\\n            <app-video-editor></app-video-editor>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from '../../_models/user';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from '../../_services/user.service';\nimport { AuthService } from '../../_services/auth.service';\n\n@Component({\n  selector: 'app-profile-edit',\n  templateUrl: './profile-edit.component.html',\n  styleUrls: ['./profile-edit.component.css']\n})\nexport class ProfileEditComponent implements OnInit {\n  @ViewChild('editForm')\n  editForm: NgForm;\n  user: User;\n  photoUrl: string;\n\n  @HostListener('window: beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private alertify: AlertifyService,\n    private userService: UserService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\n    });\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  updateUser() {\n    console.log(this.user);\n    this.userService.updateUser(this.authService.decodedToken.nameid, this.user)\n      .subscribe(\n        next => {\n          this.alertify.success(\n            'Profile updated successfully'\n          );\n          this.editForm.reset(this.user);\n        },\n        error => {\n          this.alertify.error('Error saving changes');\n        }\n      );\n  }\n\n  updateProfilePhoto(photoUrl) {\n    this.user.photoUrl = photoUrl;\n    this.alertify.success('Profile Picture Changed Successfully');\n  }\n}\n","module.exports = \".img-thumbnail {\\r\\n    margin: 25px;\\r\\n    width: 85%;\\r\\n    height: 85%;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n    padding: 10px 15px;\\r\\n    background-color: white;\\r\\n    border-top: none;\\r\\n}\"","module.exports = \"<br><br>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <br>\\n    <h1>{{user.firstName | titlecase}}'s Profile</h1>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{user.photoUrl || '../../assets/user.png'}}\\\" alt=\\\"{{user.username}}\\\">\\n\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Location :</strong>\\n            <p>{{user.city}}, {{user.country}}</p>\\n          </div>\\n          <div>\\n            <strong>Genre :</strong>\\n            <p>{{user.genre}}</p>\\n          </div>\\n          <div>\\n            <strong>Last Active :</strong>\\n            <p>{{user.lastActive | timeAgo}}</p>\\n          </div>\\n          <div>\\n            <strong>Member Since :</strong>\\n            <p>{{user.created | date}}</p>\\n          </div>\\n          <div>\\n            <strong>Years Of Experience :</strong>\\n            <p>{{user.yearsOfExperience}}</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"btn-group d-flex\\\">\\n            <button class=\\\"btn btn-primary w-100\\\">Follow</button>\\n            <button class=\\\"btn btn-success w-100\\\" (click)=\\\"selectTab(3)\\\">Message</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"follower-tabset\\\" #memberTabs>\\n          <tab heading=\\\"About\\\">\\n            <br>\\n            <h4>Description</h4>\\n            <p>{{user.introduction}}</p>\\n          </tab>\\n          <tab heading=\\\"Interests\\\">\\n            <br>\\n            <h4>Interests</h4>\\n            <p>{{user.interests}}</p>\\n          </tab>\\n          <tab heading=\\\"Photos\\\">\\n            <br>\\n            <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\"></ngx-gallery>\\n          </tab>\\n          <tab heading=\\\"Messages\\\">\\n            <br>\\n            <app-member-messages [recepientId]=\\\"user.id\\\"></app-member-messages>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from '../../_models/user';\nimport { UserService } from '../../_services/user.service';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from 'ngx-gallery';\nimport { AuthService } from '../../_services/auth.service';\nimport { TabsetComponent } from 'ngx-bootstrap';\n\n@Component({\n  selector: 'app-profile-page',\n  templateUrl: './profile-page.component.html',\n  styleUrls: ['./profile-page.component.css']\n})\nexport class ProfilePageComponent implements OnInit {\n  @ViewChild('memberTabs') memberTabs: TabsetComponent;\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n\n  constructor(\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private route: ActivatedRoute,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\n    });\n\n    this.route.queryParams.subscribe(params => {\n      const selectedTab = params['tab'];\n      this.memberTabs.tabs[selectedTab > 0 ? selectedTab : 0].active = true;\n    });\n    // photo gallery code\n    this.galleryOptions = [\n      {\n        width: '700px',\n        height: '500px',\n        imagePercent: 85,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Fade,\n        preview: true\n      }\n    ];\n    this.galleryImages = this.getImages();\n  }\n\n  getImages() {\n    const imageUrls = [];\n    for (let i = 0; i < this.user.photos.length; i++) {\n      imageUrls.push({\n        small: this.user.photos[i].photoUrl,\n        medium: this.user.photos[i].photoUrl,\n        big: this.user.photos[i].photoUrl,\n        description: this.user.photos[i].description\n      });\n    }\n    return imageUrls;\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n}\n","module.exports = \".nv-file-over {\\r\\n    border: dotted 3px #158CBA;\\r\\n}\"","module.exports = \"<div class=\\\"row mt-3\\\">\\n  <div class=\\\"col-md-3\\\">\\n    <h3>Add Videos</h3>\\n    <div ng2FileDrop [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\" (fileOver)=\\\"fileOverBase($event)\\\" [uploader]=\\\"uploader\\\"\\n      class=\\\"card bg-faded p-3 text-center mb-3 my-drop-zone\\\">\\n      <i class=\\\"fa fa-upload fa-3x\\\"></i>\\n      Drop Videos Here\\n    </div>\\n    Multiple\\n    <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple /><br />\\n    Single\\n    <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n  </div>\\n</div>\\n\\n\\n<!-- upload widget -->\\n<div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\" *ngIf=\\\"uploader?.queue?.length\\\">\\n  <h3>Upload queue</h3>\\n  <p>Queue length: {{ uploader?.queue?.length }}</p>\\n  <table class=\\\"table\\\">\\n    <thead>\\n      <tr>\\n        <th width=\\\"50%\\\">Name</th>\\n        <th>Size</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let item of uploader.queue\\\">\\n        <td><strong>{{ item?.file?.name }}</strong></td>\\n        <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB </td>\\n\\n      </tr>\\n    </tbody>\\n  </table>\\n\\n  <div>\\n    <div>\\n      Queue progress:\\n      <div class=\\\"progress mb-4\\\">\\n        <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\n      </div>\\n    </div>\\n    <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\" (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n      <span class=\\\"fa fa-upload\\\"></span> Upload\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s\\\" (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\n      <span class=\\\"fa fa-ban\\\"></span> Cancel\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\" (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\n      <span class=\\\"fa fa-trash\\\"></span> Remove\\n    </button>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment } from 'src/environments/environment.prod';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { Video } from 'src/app/_models/video';\n\n@Component({\n  selector: 'app-video-editor',\n  templateUrl: './video-editor.component.html',\n  styleUrls: ['./video-editor.component.css']\n})\nexport class VideoEditorComponent implements OnInit {\n  videos: Video[];\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n\n  constructor(\n    private authService: AuthService,\n    private alertify: AlertifyService\n  ) { }\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url:\n        this.baseUrl +\n        'users/' +\n        this.authService.decodedToken.nameid +\n        '/video',\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType: ['video'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 200 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = file => {\n      file.withCredentials = false;\n    };\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        this.alertify.success('Video Uploaded Successfully');\n      }\n    };\n  }\n\n  fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n}\n","module.exports = \"table {\\r\\n    margin-top: 15px;\\r\\n}\\r\\n\\r\\n.img-circle{\\r\\n    max-height: 60px;\\r\\n    max-width: 50px;\\r\\n}\\r\\n\\r\\ntd {\\r\\n    vertical-align: middle;\\r\\n}\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Unread\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-envelope\\\"></i> Unread\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Inbox\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-envelope-open\\\"></i> Inbox\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Outbox\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-paper-plane\\\"></i> Outbox\\n      </button>\\n    </div>\\n  </div>\\n\\n  <br>\\n  <div class=\\\"row\\\" *ngIf=\\\"messages.length == 0\\\">\\n    <h3>No messages</h3>\\n  </div>\\n  <br>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"messages.length > 0\\\">\\n    <table class=\\\"table table-hover\\\" style=\\\"cursor: pointer\\\">\\n      <tr>\\n        <th style=\\\"width: 40%\\\">Message</th>\\n        <th style=\\\"width: 20%\\\">From / To</th>\\n        <th style=\\\"width: 20%\\\">Sent / Received</th>\\n        <th style=\\\"width: 20%\\\"></th>\\n      </tr>\\n      <tr *ngFor=\\\"let message of messages\\\" [routerLink]=\\\"['/members', \\n        messageContainer == 'Outbox' ? message.recepientId : message.senderId]\\\" [queryParams]=\\\"{tab: 3}\\\">\\n        <td>{{message.content}}</td>\\n        <td>\\n          <div *ngIf=\\\"messageContainer != 'Outbox'\\\">\\n            <img src={{message?.senderPhotoUrl}} class=\\\"img-circle rounded-circle mr-1\\\">\\n            <strong>{{message.senderKnownAs}}</strong>\\n          </div>\\n          <div *ngIf=\\\"messageContainer == 'Outbox'\\\">\\n            <img src={{message?.recepientPhotoUrl}} class=\\\"img-circle rounded-circle mr-1\\\">\\n            <strong>{{message.recepientKnownAs}}</strong>\\n          </div>\\n        </td>\\n        <td>{{message.messageSent | timeAgo}}</td>\\n        <td>\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"deleteMessage(message.id)\\\">Delete</button>\\n        </td>\\n      </tr>\\n    </table>\\n\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n  <pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n    [(ngModel)]=\\\"pagination.currentPage\\\" (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\"\\n    firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n  </pagination>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { AuthService } from '../_services/auth.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from '../_services/user.service';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer = 'Unread';\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private alertify: AlertifyService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.messages = data['messages'].result;\n      this.pagination = data['messages'].pagination;\n    });\n  }\n\n  loadMessages() {\n    this.userService.getMessage(\n      this.authService.decodedToken.nameid,\n      this.pagination.currentPage,\n      this.pagination.itemsPerPage,\n      this.messageContainer\n    ).subscribe((res: PaginatedResult<Message[]>) => {\n      this.messages = res.result;\n      this.pagination = res.pagination;\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  deleteMessage(id: number) {\n    this.alertify.confirm('Are you sure about deleting this message ?', () => {\n      this.userService.deleteMessage(id, this.authService.decodedToken.nameid)\n      .subscribe(() => {\n        this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\n        this.alertify.success('Message Deleted');\n      }, error => {\n        this.alertify.error('Unable to delete the message');\n      });\n    });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadMessages();\n  }\n}\n","module.exports = \".dropdown-toggle, .dropdown-item{\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\nimg {\\r\\n    max-width: 40px;\\r\\n    border: 2px solid white;\\r\\n    border-radius: 25px;\\r\\n    display: inline;\\r\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <nav class=\\\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\\\">\\n    <div class=\\\"container\\\">\\n      <a *ngIf=\\\"loggedIn()\\\" class=\\\"navbar-brand\\\" [routerLink]=\\\"['/newsfeed']\\\"><i class=\\\"fas fa-home\\\"></i> Muzyk</a>\\n      <a *ngIf=\\\"!loggedIn()\\\" class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\"><i class=\\\"fas fa-home\\\"></i> Muzyk</a>\\n\\n      <ul class=\\\"navbar-nav mr-auto\\\" *ngIf=\\\"loggedIn()\\\">\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/messages']\\\"><i class=\\\"fas fa-comment-alt\\\"></i> Messages </a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/analytics']\\\"><i class=\\\"fas fa-chart-line\\\"></i> Analytics</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/followers']\\\"><i class=\\\"fas fa-users\\\"></i> Followers</a>\\n        </li>\\n      </ul>\\n\\n      <form #searchForm=\\\"ngForm\\\" class=\\\"form-inline mr-3\\\" *ngIf=\\\"loggedIn()\\\" (ngSubmit)=\\\"searchUsers()\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <input class=\\\"form-control w-300\\\" type=\\\"search\\\" name=\\\"searchBox\\\" required placeholder=\\\"Search\\\" [(ngModel)]=\\\"searchQuery\\\">\\n          <button class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n        </div>\\n      </form>\\n\\n      <div *ngIf=\\\"loggedIn()\\\" class=\\\"dropdown\\\" dropdown>\\n        <span class=\\\"mr-1\\\">\\n          <img src=\\\"{{photoUrl || '../../assets/user.png'}}\\\">\\n        </span>\\n        <a class=\\\"dropdown-toggle text-light\\\" dropdownToggle>\\n          Welcome {{authService.decodedToken?.unique_name | titlecase}}\\n        </a>\\n        <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/members/', this.authService.decodedToken?.nameid]\\\"><i class=\\\"fa fa-user\\\"></i>\\n            My Profile</a>\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/profile/edit']\\\"><i class=\\\"fa fa-edit\\\"></i> Edit Profile</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\"><i class=\\\"fa fa-calendar\\\"></i> My Bookings</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\"><i class=\\\"fas fa-marker\\\"></i> Personalize</a>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\"><i class=\\\"fas fa-sign-out-alt\\\"></i> Logout</a>\\n        </div>\\n      </div>\\n\\n      <form *ngIf=\\\"!loggedIn()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"login()\\\">\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" required [(ngModel)]=\\\"model.Username\\\">\\n\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" required [(ngModel)]=\\\"model.Password\\\">\\n        <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\">Login</button>\\n      </form>\\n    </div>\\n  </nav>\\n</div>\\n<br>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n\r\n  model: any = {};\r\n  photoUrl: string;\r\n  searchQuery: string;\r\n\r\n  constructor(public authService: AuthService, private alertify: AlertifyService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\r\n  }\r\n\r\n  login() {\r\n    this.authService.login(this.model).subscribe(next => {\r\n      this.alertify.success('logged in successfully');\r\n    }, error => {\r\n      this.alertify.error(error);\r\n    }, () => {\r\n      this.router.navigate(['/newsfeed']);\r\n    });\r\n  }\r\n\r\n  loggedIn() {\r\n    return this.authService.checkLoggedIn();\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    this.authService.decodedToken = null;\r\n    this.authService.currentUser = null;\r\n    this.alertify.message('logged out');\r\n    this.router.navigate(['\\home']);\r\n  }\r\n\r\n  searchUsers() {\r\n    this.router.navigate(['\\lists']);\r\n  }\r\n\r\n}\r\n","module.exports = \".img-thumbnail{\\r\\n    height: 30px;\\r\\n    border: none;\\r\\n    border-radius: 10px;\\r\\n}\"","module.exports = \"<!-- <div *ngFor=\\\"let photo of photos\\\"> -->\\n<div class=\\\"card justify-content-center w-65\\\">\\n  <div class=\\\"card-title\\\">\\n    <img src=\\\"{{user.photoUrl}}\\\" class=\\\"img-thumbnail\\\" alt=\\\"\\\">\\n    {{user.firstName}}\\n  </div>\\n  <div class=\\\"img-card-top \\\">\\n    <img src=\\\"{{user.photoUrl}}\\\" class=\\\"w-80 pl-4\\\" alt=\\\"\\\">\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button class=\\\"btn btn-primary\\\"><i class=\\\"fab fa-gratipay\\\"></i></button>\\n      <button class=\\\"btn btn-primary\\\"><i class=\\\"fas fa-comments\\\"></i></button>\\n    </div>\\n  </div>\\n</div>\\n<!-- </div> -->\\n<br>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { Photo } from 'src/app/_models/photo';\n\n@Component({\n  selector: 'app-newsfeed-card',\n  templateUrl: './newsfeed-card.component.html',\n  styleUrls: ['./newsfeed-card.component.css']\n})\nexport class NewsfeedCardComponent implements OnInit {\n  @Input()\n  user: User;\n  photos: Photo[];\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.photos = this.user.photos;\n  }\n}\n","module.exports = \".dropdown-toggle, .dropdown-item{\\r\\n    cursor: pointer;\\r\\n}\"","module.exports = \"<div class=\\\"container-fluid pt-5 justify-content-center\\\">\\n  <div class=\\\"container col-7\\\">\\n\\n    <!--Share your mood card start-->\\n    <div class=\\\"card mb-3 mt-2\\\">\\n      <div class=\\\"card-title\\\"></div>\\n      <div class=\\\"card-body p-1\\\">\\n        <div class=\\\"form-group\\\">\\n          <textarea class=\\\"w-100\\\" type=\\\"text\\\" rows=\\\"3\\\" placeholder=\\\"Share your mood\\\"></textarea>\\n        </div>\\n      </div>\\n      <div class=\\\"card-footer\\\">\\n        <div class=\\\"dropdown\\\" dropdown>\\n          <a class=\\\"dropdown-toggle btn btn-outline-primary\\\" color=\\\"white\\\" dropdownToggle><i class=\\\"fas fa-upload\\\"></i>\\n            Upload</a>\\n          <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/profile/edit']\\\"><i class=\\\"fas fa-camera\\\"></i> Upload Photo</a>\\n            <div class=\\\"dropdown-divider\\\"></div>\\n            <a class=\\\"dropdown-item\\\"><i class=\\\"fas fa-file-video\\\"></i> Upload Video from Computer</a>\\n          </div>\\n        </div>\\n      </div>\\n      <!--Share your mood card end-->\\n      <br>\\n      <div class=\\\"container\\\" *ngFor=\\\"let user of users\\\">\\n        <app-newsfeed-card [user]=\\\"user\\\"></app-newsfeed-card>\\n      </div>\\n\\n      <div class=\\\"d-flex justify-content-center\\\">\\n        <pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n          [(ngModel)]=\\\"pagination.currentPage\\\" (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\"\\n          firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n        </pagination>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from '../../_services/user.service';\nimport { Pagination, PaginatedResult } from '../../_models/pagination';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { User } from '../../_models/user';\n\n@Component({\n  selector: 'app-newsfeed',\n  templateUrl: './newsfeed.component.html',\n  styleUrls: ['./newsfeed.component.css']\n})\nexport class NewsfeedComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  followsParam: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private alertify: AlertifyService\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['user'].result;\n      this.pagination = data['user'].pagination;\n    });\n    this.followsParam = 'Followees';\n  }\n\n  loadUsers() {\n    this.userService\n      .getUsers(\n        this.pagination.currentPage,\n        this.pagination.itemsPerPage,\n        null,\n        this.followsParam\n      )\n      .subscribe(\n        (res: PaginatedResult<User[]>) => {\n          this.users = res.result;\n          this.pagination = res.pagination;\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n}\n","module.exports = \".back-wallpaper {\\r\\n    background-image:'../../assets/reg-back.jpg';\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid back-wallpaper\\\">\\r\\n    <!-- register card start-->\\r\\n    <div class=\\\"card justify-content-center\\\">\\r\\n        <div class=\\\"card-title text-center text-primary\\\"><h3>Sign Up ! Its Completely Free</h3></div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\r\\n                <hr>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"control-label mr-3\\\">I am a: </label>\\r\\n                    <label class=\\\"radio-inline\\\">\\r\\n                        <input type=\\\"radio\\\" class=\\\"mr-3\\\" value=\\\"artist\\\" formControlName=\\\"userType\\\"> Artist\\r\\n                    </label>\\r\\n                    <label class=\\\"radio-inline ml-3\\\">\\r\\n                        <input type=\\\"radio\\\" class=\\\"mr-3\\\" value=\\\"venue\\\" formControlName=\\\"userType\\\"> Venue\\r\\n                    </label>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <input type=\\\"text\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('username').errors && registerForm.get('username').touched}\\\"\\r\\n                        class=\\\"form-control\\\" placeholder=\\\"Username\\\" formControlName=\\\"username\\\">\\r\\n                    <div class=\\\"invalid-feedback\\\">\\r\\n                        please enter a valid Username\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <input type=\\\"text\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('firstName').errors && registerForm.get('firstName').touched}\\\"\\r\\n                                class=\\\"form-control\\\" placeholder=\\\"First Name\\\" formControlName=\\\"firstName\\\">\\r\\n                            <div class=\\\"invalid-feedback\\\">\\r\\n                                please enter your First Name\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <input type=\\\"text\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('lastName').errors && registerForm.get('lastName').touched}\\\"\\r\\n                                class=\\\"form-control\\\" placeholder=\\\"Last Name\\\" formControlName=\\\"lastName\\\">\\r\\n                            <div class=\\\"invalid-feedback\\\">\\r\\n                                please enter your Last Name\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <input type=\\\"text\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\\\"\\r\\n                        class=\\\"form-control\\\" placeholder=\\\"Nick Name\\\" formControlName=\\\"knownAs\\\">\\r\\n                    <div class=\\\"invalid-feedback\\\">\\r\\n                        please enter a nickname\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <input type=\\\"password\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('password').errors && registerForm.get('password').touched}\\\"\\r\\n                        class=\\\"form-control\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\r\\n                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('required') && registerForm.get('password').touched\\\">\\r\\n                        Password required\\r\\n                    </div>\\r\\n                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('minlength') && registerForm.get('password').touched\\\">\\r\\n                        Please enter a password of atleast 8 characters\\r\\n                    </div>\\r\\n                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('maxlength') && registerForm.get('password').touched\\\">\\r\\n                        Password cannot exceed 20 characters\\r\\n                    </div>\\r\\n                    <small id=\\\"passwordHelpInline\\\" class=\\\"text-muted\\\">\\r\\n                        Must be 8-20 characters long.\\r\\n                    </small>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('confirmPassword').errors && registerForm.get('confirmPassword').touched || registerForm.get('confirmPassword').touched && registerForm.hasError('mismatch')}\\\"\\r\\n                        formControlName=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\">\\r\\n                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('confirmPassword').hasError('required') && registerForm.get('confirmPassword').touched\\\">\\r\\n                        Please enter your password again\\r\\n                    </div>\\r\\n                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.hasError('mismatch') && registerForm.get('confirmPassword').touched\\\">\\r\\n                        Password is not matching\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <input type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('dob').errors && registerForm.get('dob').touched}\\\"\\r\\n                        class=\\\"form-control\\\" placeholder=\\\"Date of Birth\\\" formControlName=\\\"dob\\\">\\r\\n                    <div class=\\\"invalid-feedback\\\">\\r\\n                        please enter your Date of Birth\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <input type=\\\"text\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\\\"\\r\\n                            class=\\\"form-control\\\" placeholder=\\\"City\\\" formControlName=\\\"city\\\">\\r\\n                        <input type=\\\"text\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\\\"\\r\\n                            class=\\\"form-control\\\" placeholder=\\\"Country\\\" formControlName=\\\"country\\\">\\r\\n                        <div class=\\\"invalid-feedback\\\">\\r\\n                            please enter your Address\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group text-centre inline-button\\\">\\r\\n                    <button class=\\\"btn btn-success mb-1 btn-block\\\" [disabled]=\\\"!registerForm.valid\\\" type=\\\"submit\\\">Sign\\r\\n                        Up</button>\\r\\n                    <button class=\\\"btn btn-default btn-block\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- register card div end-->\\r\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n  FormBuilder\r\n} from '@angular/forms';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\r\nimport { User } from '../_models/user';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  @Output()\r\n  cancelRegister = new EventEmitter();\r\n  user: User;\r\n  registerForm: FormGroup;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private alertify: AlertifyService,\r\n    private builder: FormBuilder,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.bsConfig = {\r\n      containerClass: 'theme-dark-blue'\r\n    };\r\n    this.createRegisterForm();\r\n  }\r\n\r\n  createRegisterForm() {\r\n    this.registerForm = this.builder.group(\r\n      {\r\n        username: ['', Validators.required],\r\n        password: [\r\n          '',\r\n          [\r\n            Validators.required,\r\n            Validators.minLength(6),\r\n            Validators.maxLength(24)\r\n          ]\r\n        ],\r\n        confirmPassword: ['', Validators.required],\r\n        userType: ['artist', Validators.required],\r\n        knownAs: ['', Validators.required],\r\n        city: ['', Validators.required],\r\n        country: ['', Validators.required],\r\n        firstName: ['', Validators.required],\r\n        lastName: ['', Validators.required],\r\n        dob: ['', Validators.required]\r\n      },\r\n      { validator: this.passMatchValidation }\r\n    );\r\n  }\r\n\r\n  passMatchValidation(g: FormGroup) {\r\n    return g.get('password').value === g.get('confirmPassword').value\r\n      ? null\r\n      : { mismatch: true };\r\n  }\r\n\r\n  register() {\r\n    if (this.registerForm.valid) {\r\n      this.user = Object.assign({}, this.registerForm.value);\r\n      this.authService.register(this.user).subscribe(() => {\r\n        this.alertify.success('registration successful');\r\n      }, error => {\r\n        this.alertify.error('Something went wrong in registration');\r\n      }, () => {\r\n        this.authService.login(this.user).subscribe(() => {\r\n          this.router.navigate(['newsfeed']);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.cancelRegister.emit(false);\r\n  }\r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ListsComponent } from './members/lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { AnalyticsComponent } from './analytics/analytics.component';\r\nimport { NewsfeedComponent } from './newsFeed-components/newsfeed/newsfeed.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { ProfilePageComponent } from './members/profile-page/profile-page.component';\r\nimport { ProfilePageResolver } from './_resolvers/profile-page.resolver';\r\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\r\nimport { ProfileEditComponent } from './members/profile-edit/profile-edit.component';\r\nimport { ProfileEditResolver } from './_resolvers/profile-edit.resolver';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\r\nimport { FollowerListComponent } from './follower-list/follower-list.component';\r\nimport { FollowerResolver } from './_resolvers/followers.resolver';\r\nimport { MessagesResolver } from './_resolvers/messages.resolver';\r\n\r\nexport const appRoutes: Routes = [\r\n    { path: '', component: HomeComponent},\r\n    {\r\n        path: '',\r\n        runGuardsAndResolvers: 'always',\r\n        canActivate: [AuthGuard],\r\n        children: [\r\n            { path: 'newsfeed', component: NewsfeedComponent, resolve: {user: FollowerResolver}},\r\n            { path: 'messages', component: MessagesComponent, resolve: {messages: MessagesResolver}},\r\n            { path: 'analytics', component: AnalyticsComponent},\r\n            { path: 'lists', component: ListsComponent, resolve: {users: MemberListResolver}},\r\n            { path: 'profile/edit', component: ProfileEditComponent, resolve: {user: ProfileEditResolver},\r\n                canDeactivate: [PreventUnsavedChanges]},\r\n            { path: 'followers', component: FollowerListComponent, resolve: {user: FollowerResolver}},\r\n            { path: 'members/:id', component: ProfilePageComponent, resolve: {user: ProfilePageResolver}},\r\n        ]\r\n    },\r\n    { path: '**', redirectTo: '', pathMatch: 'full'}\r\n];\r\n\r\n\r\n","export const environment = {\n  production: true,\n  apiUrl: 'api/'\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/',\n  signalRUrl: 'http://localhost:5000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}